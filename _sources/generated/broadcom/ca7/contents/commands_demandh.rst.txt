.. _commands_demandh_module:


commands_demandh -- Defines the name of the job being demanded and hold
=======================================================================

.. contents::
   :local:
   :depth: 1


Synopsis
--------

The demanded jobs are placed in the request queue and assigned a unique CA 7 job number.







Parameters
----------

  job (*required*, type: str)
    Job=PAYROLL

    

    Defines the name of the job being demanded.

    The demanded jobs are placed in the request queue and assigned a unique CA 7 job number.



  jobl (type: str)
    Jobl=payrollSW123

    

    Defines the long name of the job being demanded.

    The demanded jobs are placed in the request queue and assigned a unique CA 7 job number.



  arfset (type: str)
    Arfset={arfsetname|\*\*NONE\*\*}

    

    Defines the ARF set name that is used for this run of the job.

    If you specify \*\*NONE\*\*, no ARF processing is performed for this run of the job.

    

    Limits: 1 to 8 alphanumeric characters or \*\*NONE\*\*.



  cc (type: str)
    Cc=1234

    

    Defines, with RO (relational operator), the job-level condition codes that are used to determine whether a job executes successfully.

    

    If specified, this value overrides the RO defined for the job in the CA WA CA 7 Edition database. RO is required when CC is specified.

    

    Default: The job definition panel COND-CODE value when the job is defined to CA WA CA 7 Edition; otherwise 0.

    Limits: 1 to 4 numeric characters from 0 to 4095. Invalid with agent jobs.



  class (type: str)
    Class=n

    

    Defines the workload balancing class for resource checking.

    

    Limits: 1 alphanumeric character.



  count (type: str)
    Count=nnnn

    

    Defines the maximum number of times to repeat the job. COUNT is ignored if INTERVAL is not specified.

    

    Default: None. The job continues repeating until the STOP time is reached.

    Limits: 1 to 4 numeric characters from 0 to 1439. The leading zeros can be discarded.



  date (type: str)
    Date={+nn|yyddd}

    

    Defines due-out and submit dates.

    Limits: If used, specify DOTM or TIME.

    +nn

    

    Defines the number of days after the current date.

    Limits: 1 to 2 numeric characters from 1 to 99

    yyddd

    

    Defines the Julian date to run the job.



  depjob (type: str)
    Depjob=jobname2

    

    Defines a single predecessor job that must complete while the demanded job is waiting.

    Limits: 1 to 8 alphanumeric characters.



  dotm (type: str)
    Dotm=hhmm

    

    Defines the due-out time-of-day for the job in hours (hh) and minutes (mm).

    If DOTM is specified on the DEMAND/DEMANDH command and the value that is given is earlier than the current time, the due-out day is assumed to be the following day.

    

    If DOTM and LEADTM are both omitted, then deadline start time is assumed to be the current time plus the LEADTM.

    

    Limits:  hh= 2 numeric characters from 0 to 24

    mm= 2 numeric characters from 00 to 59

    

    Required: No (unless DATE is used, if so, DOTM or TIME must be specified).



  exec (type: str)
    Exec={NO|YES}

    

    Specifies whether to execute the job (YES/NO).

    If NO (N) is used, the job does not run but shows a normal completion as if it did run. The value that is specified here overrides the value that is coded on the job definition EXEC field.

    

    Default: The job definition panel EXEC value if the job is defined to CA WA CA 7 Edition; otherwise YES.



  interval (type: str)
    Interval=hhmm

    

    Identifies that the job is repeated (executed more than once) and defines the amount of time between each iteration.

    

    If INTERVAL is specified, the TIME and TYPE keywords are required. If both INTERVAL and COUNT are specified, the INTERVAL value times the COUNT value must total less than 24 hours.

    

    Limits: hh=2 numeric characters from 0 to 23

    mm=2 numeric characters from 00 to 59.



  jclid (type: str)
    Jclid=10

    

    Defines the JCL data set that contains the execution JCL to be submitted.

    

    If used, the value must be a numeric INDEX associated with the wanted JCL data set (on the JCL statement in the initialization file).

    

    If the job is defined in the database, the value must be the same as the value on the DB.1 panel or the Optional PARMLIB/Parmlib value on the DB.10 and DB.11 panels.This field or the JCLLIB field is required if the job is not defined in the database. JCLID and JCLLIB are mutually exclusive.Limits: 1 to 3 numeric characters from 0 through 254 and from 256 through 999. 255 is reserved.



  jcllib (type: str)
    Jcllib=&SPECIAL

    

    Defines the JCL data set that contains the execution JCL to be submitted.

    

    If used, the value must be a symbolic INDEX associated with the wanted JCL data set (on the JCL statement in the initialization file).

    

    If the job is defined in the database, the value must be the same as the value on the DB.1 panel or the Optional PARMLIB/Parmlib value on the DB.10 and DB.11 panels.This field or the JCLLIB field is required if the job is not defined in the database. JCLID and JCLLIB are mutually exclusive.Limits: 2 to 16 alphanumeric characters beginning with ampersand (&).



  late (type: str)
    Late={NO|YES}

    

    Specifies whether a notification occurs when the job becomes late.

    Specify YES (Y) to make the job eligible to be marked LATE. If NO (N) is used, the job is never marked LATE. The value that is specified here overrides the value that is coded on the job definition PROMPTS field.



  leadtm (type: str)
    Leadtm={0100|hhmm}

    

    Specifies the lead (processing) time that is required for the job to run.

    If omitted, 1 hour is usedFormat: hhmm

    Limits: hh= 2 numeric characters from 0 to 24

    mm= 2 numeric characters from 00 to 59You can omit leading zeros.



  mainid (type: str)
    Mainid={ALL|SYn|/SYn|-SYn}

    

    Specifies the MAINID, as defined in the initialization file CPU statement, to which you want to redirect the job.

    The value that is specified here overrides the value that is coded on the job definition MAINID field. The name must be one of the following values:

    

    ALL

    Specifies all CPUs are acceptable for executing the job.

    

    SYn

    n defines the CPU to which the job is being redirected. The value of n can range from 1 to 7.

    

    /SYn

    n defines a CPU to which the job cannot be submitted. The value of n can range from 1 to 7.

    

    -SYn

    n defines a CPU to which the job cannot be submitted. The value of n can range from 1 to 7.

    

    Limits: Invalid for internal cross-platform jobs.



  prty (type: str)
    Prty=nnn

    Defines the initial workload balancing priority

    

    Limits: 1-3 numeric (1-255).



  rms (type: str)
    Rms={NO|YES}

    

    Specifies whether CA WA CA 7 Edition inserts the CA Workload Automation Restart Option for z/OS Schedulers RMS step.

    

    Specify YES (Y) to insert the step with the CA Workload Automation Restart Option for z/OS Schedulers processing code of P. Enter NO (N) to indicate that the RMS step is not inserted.

    

    The value that is specified here overrides the value that is coded on the job definition INSERT-RMS field.

    Default: The job definition panel INSERT-RMS value if job defined to CA WA CA 7 Edition; otherwise NO.

    Limits: Invalid for internal cross-platform jobs.



  ro (type: str)
    Ro={EQ|LT|GT|GE|LE|NE|#S|IG|0}

    

    Specifies the relational operator of the condition code (CC) or if the step level #SCC statements are being used in the JCL of the job.

    

    EQ

    Equal to

    

    LT

    Less than

    

    GT

    Greater than

    

    GE

    Greater than or equal to

    

    LE

    Less than or equal to

    

    NE

    Not equal to

    

    #S

    Step condition code tests to be made based on a #SCC statement.

    

    IG

    No evaluation of the job is done. CA WA CA 7 Edition always assumes that the job completes successfully, regardless of condition codes, abend codes, or run-time JCL errors.

    

    Limits: Invalid with agent jobs.



  schid (type: str)
    Schid={1|nnn}

    

    Indicates the schedule ID to be used for evaluating JCL overrides that are scheduled with the #Jx or #Xx commands.

    

    Default: 1

    Limits: 1 to 3 numeric characters from 1 to 999 (See Note)

    

    No (unless the SCHEDULE statement in the initialization file specifies SCHID=YES, then this parameter is required).



  set (type: str)
    Set={NDB|NTR|SKP}

    

    Specifies skip the next scheduled cycle for the job (SKP), disable triggering (NTR), or bypass the database updating at the job completion.

    

    SKP

    Specifies this run of the job takes the place of the next scheduled run. This value has the same effect as entering NXTCYC,SET=SKP. It is reflected on output from LJOB and LLOCK commands as if NXTCYC,SET=SKP was used. This parameter is invalid if the job has no schedule. SET=SKP has no impact on repeating jobs that are already in the queues.

    

    NTR

    Specifies normal triggering is disabled only for this run of the job.

    

    NDB

    Allows a job to bypass all load processing at the job completion, but allows other processing to proceed typically.



  stop (type: str)
    Stop=hhmm

    

    Defines the clock time after which the job is not repeated. STOP is ignored if INTERVAL is not specified.

    

    Default: 1439 minutes (24 hours minus 1 minute) after the submit time

    Limits: hh=1 through 2 numeric characters from 0 to 23

    mm=2 numeric characters from 00 to 59.



  time (type: str)
    Time={hhmm|+hhmm}

    

    Establishes a submit time-of-day requirement for the job.

    

    Format: hhmm

    Defines the time-of-day where hh is hours (0 through 23) and mm is minutes (00 through 59).

    Leading zeros are not required

    

    .



  type (type: str)
    Type={CLOCK|END|RES|START}

    

    Indicates that the job is being scheduled for rerun.

    The value must be specified as shown.

    

    TYPE=RES is optional.If used, a restart requirement is placed on the job, and the job has to be manually restarted.Limits: RES, CLOCK, START, or END.



  host (*required*, type: str)
    Host name of the CA7 API service that is running on the mainframe system.



  port (*required*, type: int)
    Port for the CA7 API service that is running on the mainframe system.



  user (*required*, type: str)
    User name for authenticating connections to the CA7 API service that is running on the mainframe system.



  password (*required*, type: str)
    Password for authenticating connections to the CA7 API service that is running on the mainframe system.



  base_path (type: str)
    The base path for your Zowe API Mediation Layer instance. Specify this option to prepend the base path to all resources when making REST requests. Do not specify this option if you are not using an Zowe API Mediation Layer.



  protocol (*required*, type: str)
    Specifies protocol to use for CA7 connection (http or https).


    Choices:
      * ``http`` 
      * ``https`` 

  reject_unauthorized (type: bool, default: ``True``)
    Reject self-signed certificates.



  cert_file (type: path)
    The file path to a certificate file to use for authentication.

    

    Note: The CLI does not support certificate files that require a password. For more information, search Troubleshooting PEM Certificates in Zowe Docs.



  cert_key_file (type: path)
    The file path to a certificate key file to use for authentication.










Examples
--------

.. code-block:: yaml+jinja

    
    - name: Demand and hold job, PAYROLL
      broadcom.ca7.commands_demandh:
        job: PAYROLL




Return Values
-------------

data (type: list, *when returned data is a dictionary*)
  Data from the module execution (a data structure). The items of this dict are set as individual return values on the top level as well.


error (type: complex, *error*)
  More details about why the action has failed. If the failure is when calling an API service, the response contains the connection parameters.


  additional_details (type: str)
    Detailed message about the failure.


  msg (type: str)
    Short description of the result or failure.


  request (type: str, *API request failed*)
    HTTP method used to invoke API service request.


  resource (type: str, *API request failed*)
    URI of the resource of the API service request.



failed (type: bool, *always*)
  A boolean that indicates if the task was failed or not.


list (type: list, *when returned data is a list*)
  Data from the module execution (a list of data structures).


msg (type: str, *sometimes*)
  Short description of the result or failure.


rc (type: int, *always*)
  Exit code of the module, successful exit code is 0, failure is typically 1 or higher.


stderr (type: str, *error*)
  Details of the error.


stdout (type: str, *success*)
  Summary of the result.





Status
------




- This module is maintained by Broadcom.



