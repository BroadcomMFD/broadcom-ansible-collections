.. _dataset_create_dataset_module:


dataset_create_dataset -- Create a new dataset definition
=========================================================

.. contents::
   :local:
   :depth: 1


Synopsis
--------

Create Dataset.







Parameters
----------

  dataset_name (*required*, type: str)
    Specifies the data set and must be the fully qualified data set name.

    Limits: 1 to 44 alphanumeric characters

    Note: dataset-name is not required to conform to MVS data set name standards. Embedded blanks and special characters such as slashes, dashes, and underscores are permitted. All alphabetic characters are uppercased.



  type (type: str)
    (Optional) Specifies the data set type.

    Valid values are:

    NORM = Internal means both the creating-job and using-jobs for this data set are known to CA 7.

    External means the creating-job, using-jobs, or both for this data set are not known to CA 7.PERM = Specifies this data set is always available for inputDefault: NORM

    Note: When a data set is marked PERM, no SMF records are captured. PERM means no data set triggering can occur with this type of data set.



  gdg (type: str)
    (Optional) Specifies whether this data set is a generation data group.

    Valid values are:

    Y = The data set is a generation data groupN = The data set is not a generation data groupDefault: N

    Note: The specific GDG creations cannot be used for posting requirements or for triggering jobs. Posting and triggering are done based on the creation/updating (SMF 15 record) of any generation of the GDG.



  smf_feedback_required (type: str)
    (Optional) Specifies whether the interface to System Management Facility (SMF) inserts the values for DSORG, RECFM, LRECL, and BLKSIZE when this data set is next used. Unless the value is reset, this insertion is only done once.

    Valid values are:

    Y = SMF inserts the values when the data set is next usedN = SMF does not insert the values when the data set is next usedDefault: Y

    Note: After the first time the job that creates this data set runs under CA 7, this field is reset to N. If the data set attributes change, this field must be reset to Y. The changed attribute field (that is, DSORG, RECFM) must be zeroed (if numeric) or blanked out. This process causes CA 7 to record the new values when the job is run again.



  post_at_close_time (type: str)
    (Optional) Specifies when to post the creation or update of a data set to the database and queues. This process does not ensure successful step or job termination.

    Valid values are:

    Y = The action takes place when the SMF data set creation record is received (when the data set is closed)N = Causes triggering or posting action to take place at the job terminationDefault: N.



  device (type: str)
    (Optional) Specifies a device type.

    Valid values are:

    TAPEDASD.



  dsorg (type: str)
    (Optional) Specifies the data set organization. This value is the same as the DSORG specified in the DCB subparameter in the JCL.

    Limits: 1 to 3 alphanumeric characters.



  recfm (type: str)
    (Optional) Specifies the record format of the data set. This value is the same as the RECFM specified in the DCB subparameter in the JCL.

    Limits: 1 to 5 alphanumeric characters.



  lrecl (type: str)
    (Optional) Specifies the logical record length of the data set. This value is the same as the LRECL specified in the DCB subparameter in the JCL.

    Limits: 1 to 5 numeric characters.



  blksize (type: str)
    (Optional) Specifies the block size of the data set. This value is the same as the BLKSIZE specified in the DCB subparameter in the JCL.

    Limits: 1 to 5 numeric characters.



  host (*required*, type: str)
    Host name of the CA7 API service that is running on the mainframe system.



  port (*required*, type: int)
    Port for the CA7 API service that is running on the mainframe system.



  user (*required*, type: str)
    User name for authenticating connections to the CA7 API service that is running on the mainframe system.



  password (*required*, type: str)
    Password for authenticating connections to the CA7 API service that is running on the mainframe system.



  base_path (type: str)
    The base path for your Zowe API Mediation Layer instance. Specify this option to prepend the base path to all resources when making REST requests. Do not specify this option if you are not using an Zowe API Mediation Layer.



  protocol (*required*, type: str)
    Specifies protocol to use for CA7 connection (http or https).


    Choices:
      * ``http`` 
      * ``https`` 

  reject_unauthorized (type: bool, default: ``True``)
    Reject self-signed certificates.



  cert_file (type: path)
    The file path to a certificate file to use for authentication.

    

    Note: The CLI does not support certificate files that require a password. For more information, search Troubleshooting PEM Certificates in Zowe Docs.



  cert_key_file (type: path)
    The file path to a certificate key file to use for authentication.










Examples
--------

.. code-block:: yaml+jinja

    
    - name: Create a new dataset named DATASET.NAME.TEST of type NORM and data set is not a generation data group
      broadcom.ca7.dataset_create_dataset:
        dataset_name: DATASET.NAME.TEST
        type: NORM
        gdg: N




Return Values
-------------

data (type: list, *when returned data is a dictionary*)
  Data from the module execution (a data structure). The items of this dict are set as individual return values on the top level as well.


error (type: complex, *error*)
  More details about why the action has failed. If the failure is when calling an API service, the response contains the connection parameters.


  additional_details (type: str)
    Detailed message about the failure.


  msg (type: str)
    Short description of the result or failure.


  request (type: str, *API request failed*)
    HTTP method used to invoke API service request.


  resource (type: str, *API request failed*)
    URI of the resource of the API service request.



failed (type: bool, *always*)
  A boolean that indicates if the task was failed or not.


list (type: list, *when returned data is a list*)
  Data from the module execution (a list of data structures).


msg (type: str, *sometimes*)
  Short description of the result or failure.


rc (type: int, *always*)
  Exit code of the module, successful exit code is 0, failure is typically 1 or higher.


stderr (type: str, *error*)
  Details of the error.


stdout (type: str, *success*)
  Summary of the result.





Status
------




- This module is maintained by Broadcom.



