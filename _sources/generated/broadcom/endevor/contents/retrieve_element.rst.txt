.. _retrieve_element_module:


retrieve_element -- The retrieve element module retrieves an existing element in Endevor
========================================================================================

.. contents::
   :local:
   :depth: 1


Synopsis
--------

The retrieve element module retrieves an existing element in Endevor.







Parameters
----------

  element (*required*, type: str)
    Name of the Endevor element.



  environment (type: str)
    The Endevor environment where your project resides.



  system (type: str)
    The Endevor system where your project resides.



  subsystem (type: str)
    The Endevor subsystem where your project resides.



  type (type: str)
    Name of the Endevor element's type.



  stage_number (type: str)
    The Endevor stage number where your project resides.


    Choices:
      * ``\*`` 
      * ``\%`` 
      * ``1`` 
      * ``2`` 

  ccid (type: str)
    The CCID you want to use when performing an Element action.



  comment (type: str)
    The comment you want to have when performing an Element action.



  maxrc (type: int, default: ``8``)
    The maximum value of the return code of a successful action. When the return code is greater than the maxrc value, the module fails.



  element_version (type: int)
    Indicates the version number of the element (use along with the level option).



  level (type: int)
    Indicates the level number of the element (use along with the version option).



  override_signout (type: bool)
    Specify if you want to override the Signout of an Endevor element while performing this action.



  signout (type: bool)
    Specify if you want to perform the action with signing the element out.



  replace_member (type: bool)
    Specify if you want to replace the member currently in the library with the new element contents.



  expand_includes (type: bool)
    Indicates that INCLUDE statements should be expanded in the course of the action.



  search (type: bool)
    Enables the search through the Endevor map.



  get_fingerprint (type: bool)
    Return fingerprint of a retrieved, added or updated element as the first line of the response.



  where_ccid_all (type: str)
    Instructs Endevor to search both the Master Control File and the SOURCE DELTA levels for a specified CCIDs. 

    Accepts up to 8 CCIDs separated by ", ". Enclose CCIDs that contain special characters in quotes.



  where_ccid_current (type: str)
    Instructs Endevor to search through the CCID fields in the Master Control File to find a specified CCIDs. 

    Accept up to 8 CCIDs separated by ", ". Enclose CCIDs that contain special characters in quotes.



  where_ccid_retrieve (type: str)
    Instructs Endevor to use the CCID in the Master Control File RETRIEVE CCID field. 

    Accepts up to 8 CCIDs separated by ", ". Enclose CCIDs that contain special characters in quotes.



  where_proc_group (type: str)
    Lets you select Elements according to a specified Processor group. You can use a wildcard when specifying the Processor group name. 

    Accepts up to 8 Processor group names separated by ", ". 



  charset (type: str)
    Specifies the clients preferred character set when retrieving, printing or updating elements.



  to_path (type: str)
    Provide a USS path to a destination location.



  to_uss_file (type: str)
    Provide a USS file as a destination file.



  to_dataset (type: str)
    Provide a destination data set name.



  to_member (type: str)
    Provide a destination member name inside the data set.



  to_file (type: str)
    The file name in which the data from the module output is stored.



  to_dir (type: str)
    Directory name in which the module output will be stored.



  flat (type: bool)
     Store the output of the bulk action within one folder. When you use this option, ensure that the results do not contain duplicate names. (Duplicate names occur when two or more Elements have the same name and type.).



  with_dependencies (type: bool)
    Retrieve Elements, including their Endevor-managed input components.



  where_ccid_generate (type: str)
    Instructs Endevor to search using the generate CCID associated with an Element. 

    Accepts up to 8 CCIDs separated by ", ". Enclose CCIDs that contain special characters in quotes.



  where_ccid_lastact (type: str)
    Instructs Endevor to search using the last action CCID associated with an Element. 

    Accepts up to 8 CCIDs separated by ", ". Enclose CCIDs that contain special characters in quotes.



  where_ccid_lastlvl (type: str)
    Instructs Endevor to search using the last level CCID associated with an Element. 

    Accepts up to 8 CCIDs separated by ", ". Enclose CCIDs that contain special characters in quotes.



  where_ccid_change (type: str)
    This option is only valid when the data option is ele or comp. Instructs Endevor to filter the results of the list data summary function that is based on the specified ccids. 

    Accepts up to 8 CCIDs separated by ", ". Enclose CCIDs that contain special characters in quotes.



  file_extension (type: str, default: ``mixed``)
    The strategy for deciding what file extension to use during a bulk retrieve or workspace synchronization. Must be one of the following:

    

         none: File name is equal to element name, no extension is added.

    

         file-ext: The file extension defined in the Type definition is used; If not defined, no extension is added.

    

         type-name: The type name is used as the file extension.

    

         mixed: The file extension defined in Type definition is used; If not defined, the type name is used instead.


    Choices:
      * ``none`` 
      * ``file-ext`` 
      * ``type-name`` 
      * ``mixed`` **←**

  host (type: str)
    Specifies the base host name.



  port (type: str)
    Specifies the port number.



  instance (type: str)
    Specifies Endevor Web Services dataSource name.



  protocol (type: str, default: ``https``)
    Specifies the protocol used for connecting to Endevor Rest API.


    Choices:
      * ``http`` 
      * ``https`` **←**

  user (type: str)
    Specifies the user name.



  password (type: str)
    Specifies the user's password.



  reject_unauthorized (type: bool)
    Specify this option to have the server certificate verified against the list of supplied CAs.



  base_path (type: str)
    Specifies the base path used for connecting to Endevor Rest API.



  suppress_messages (type: bool)
    Suppress all [INFO]/[WARN] messages from terminal output.



  report_file (type: str)
    File name for saving reports from Endevor SCM locally.



  report_dir (type: str)
    Directory for saving reports from Endevor SCM locally, if wasn't specified. Defaults to current directory.



  write_report (type: bool)
    Write the endevor reports to a file. By default, when return code is 0, no report will be written, unless this option is specified. When return code is bigger than 0, reports will be written to a file, unless this option is specifed to be false.



  cert_file (type: path)
    The file path to a certificate file to use for authentication.

    

    Note: The CLI does not support certificate files that require a password. For more information, search Troubleshooting PEM Certificates in Zowe Docs.



  cert_key_file (type: path)
    The file path to a certificate key file to use for authentication.



  response_format_filter (type: list)
    Filter (include) fields in the response. Accepts an array of field/property names to include in the output response. You can filter JSON objects properties OR table columns/fields. In addition, you can use this option in conjunction with '--response-format-type' to reduce the output of a module to a single field/property or a list of a single field/property.



  response_format_type (type: str)
    The module response output format type. Must be one of the following:

    

    table: Formats output data as a table. Use this option when the output data is an array of homogeneous JSON objects. Each property of the object will become a column in the table.

    

    list: Formats output data as a list of strings. Can be used on any data type (JSON objects/arrays) are stringified and a new line is added after each entry in an array.

    

    object: Formats output data as a list of prettified objects (or single object). Can be used in place of "table" to change from tabular output to a list of prettified objects.

    

    string: Formats output data as a string. JSON objects/arrays are stringified.


    Choices:
      * ``table`` 
      * ``list`` 
      * ``object`` 
      * ``string`` 

  response_format_header (type: bool)
    If "--response-format-type table" is specified, include the column headers in the output.










Examples
--------

.. code-block:: yaml+jinja

    
    - name: Retrieve element from specified inventory location to local file with endevor profile set up
      broadcom.endevor.retrieve_element:
        element: elementName
        environment: ENVNAME
        system: SYSNAME
        subsystem: SUBNAME
        type: TYPENAME
        stage_number: 1
        to_file: localfile.txt
        instance: ENDEVOR

    - name: Bulk Retrieve elements with wildcarded element name and type, to local directory with endevor profile set up
      broadcom.endevor.retrieve_element:
        element: '*'
        environment: ENVNAME
        system: SYSNAME
        subsystem: SUBNAME
        type: '*'
        stage_number: 1
        to_dir: /user/localdir
        instance: ENDEVOR




Return Values
-------------

data (type: list, *when returned data is a dictionary*)
  Data from the module execution (a data structure). The items of this dict are set as individual return values on the top level as well.


error (type: complex, *error*)
  More details about why the action has failed. If the failure is when calling an API service, the response contains the connection parameters.


  additional_details (type: str)
    Detailed message about the failure.


  msg (type: str)
    Short description of the result or failure.


  request (type: str, *API request failed*)
    HTTP method used to invoke API service request.


  resource (type: str, *API request failed*)
    URI of the resource of the API service request.



failed (type: bool, *always*)
  A boolean that indicates if the task was failed or not.


list (type: list, *when returned data is a list*)
  Data from the module execution (a list of data structures).


msg (type: str, *sometimes*)
  Short description of the result or failure.


rc (type: int, *always*)
  Exit code of the module, successful exit code is 0, failure is typically 1 or higher.


stderr (type: str, *error*)
  Details of the error.


stdout (type: str, *success*)
  Summary of the result.





Status
------




- This module is maintained by Broadcom.



