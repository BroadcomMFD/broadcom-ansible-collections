.. _enable_rule_module:


enable_rule -- Enable the specified rule
========================================

.. contents::
   :local:
   :depth: 1


Synopsis
--------

Enable the specified rule.







Parameters
----------

  ruleset (*required*, type: str)
    The rule set containing the rule.



  rule (*required*, type: str)
    The name of the rule.



  user (type: str)
    Your z/OS user name used to authenticate to OPS Web Services.



  password (type: str)
    Your z/OS password used to authenticate to OPS Web Services.



  host (type: str)
    The hostname of the server where OPS Web Services is running.



  port (type: int)
    The port number for OPS Web Services.



  reject_unauthorized (type: bool, default: ``True``)
    If set to true, the server certificate is verified against the list of supplied CAs. If set to false, certificate verification is not performed.



  protocol (*required*, type: str, default: ``https``)
    The protocol used for connecting to OPS Web Services.


    Choices:
      * ``http`` 
      * ``https`` **‚Üê**

  subsystem (type: str)
    Specifies the subsystem id of the OPS/MVS instance to which commands will be directed.



  cert_file (type: path)
    The file path to a certificate file to use for authentication.

    

    Note: The CLI does not support certificate files that require a password. For more information, search Troubleshooting PEM Certificates in Zowe Docs.



  cert_key_file (type: path)
    The file path to a certificate key file to use for authentication.










Examples
--------

.. code-block:: yaml+jinja

    
    - name: Enable MYRULE on ruleset OPSRULES on subsystem OPSS.
      broadcom.ops.enable_rule:
        ruleset: OPSRULES
        rule: MYRULE
        subsystem: OPSS




Return Values
-------------

data (type: list, *when returned data is a dictionary*)
  Data from the module execution (a data structure). The items of this dict are set as individual return values on the top level as well.


error (type: complex, *error*)
  More details about why the action has failed. If the failure is when calling an API service, the response contains the connection parameters.


  additional_details (type: str)
    Detailed message about the failure.


  msg (type: str)
    Short description of the result or failure.


  request (type: str, *API request failed*)
    HTTP method used to invoke API service request.


  resource (type: str, *API request failed*)
    URI of the resource of the API service request.



failed (type: bool, *always*)
  A boolean that indicates if the task was failed or not.


list (type: list, *when returned data is a list*)
  Data from the module execution (a list of data structures).


msg (type: str, *sometimes*)
  Short description of the result or failure.


rc (type: int, *always*)
  Exit code of the module, successful exit code is 0, failure is typically 1 or higher.


stderr (type: str, *error*)
  Details of the error.


stdout (type: str, *success*)
  Summary of the result.





Status
------




- This module is maintained by Broadcom.



